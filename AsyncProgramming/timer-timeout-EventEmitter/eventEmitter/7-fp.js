'use strict';

//здесь мы перепишем весь код с 6го примера на более краткий фциональный код

//из этой лямбды мы вернём Объект
const emitter = (events = {}) => ({
  //внутри on и emit делает тоже самое что и в предыдущих примерах
  //сначала мы ищем такое событие в коллекшене events[name], если не находим то берём пустой array
  //events[name] = events[name] || [] здесь мы присваиваем этот array events[name] в событие events[name] то-есть здесь происходит дублирование оппераций, он там мог уже быть но мы его повторно если что присваиваем и дальше сама опперация присвения возвращает нам ссылку на присвоенный элемент и по-этому мы сразу можем сделать push
  on: (name, fn) => (events[name] = events[name] || []).push(fn),
  //здесь тоже самое (events[name] || []) что бы лишний раз if не писать
  emit: (name, ...data) => (events[name] || []).forEach(fn => fn(...data)),
});

// Usage

const ee = emitter();

ee.on('event1', data => {
  console.dir(data);
});

ee.emit('event1', { a: 5 });
