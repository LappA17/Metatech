'use strict';

//Здесь код уже будет НЕБЛОКИРУЮЩИЙ и выполняет только за 60 мс, то-есть уже не 1350

//Так как мы теперь можем отдавать console.log('next ', k++) паралельно в евентлуп с перебором массива - мы можем теперь параралельно делать какие-то фичи, если мы к примеру в браузере это дело запускаем то пока мы иттерариуемся по ДАТА-СЕТу то у нас всё таки происходит взаимодействие с пользователем, продолжате работать интерфейс

const INTERVAL = 10; //после прохождения 10мс мы хотим отдать квант времени в ЕвентЛуп

const numbers = new Array(1000).fill(1);

const each = (array, fn) => {
  //Здесь мы засикаем время потому что берёт время в начале опперации
  let time = Date.now();
  let i = 0;
  const last = array.length - 1;

  const next = () => {
    //внутри next будет крутить здесь цикл, пока while не дойдет до последнего элемента
    while (i <= last) {
      const now = Date.now();
      const diff = now - time;
      //у нас в этом цикле две ветки
      //первая ветка - если у нас время привысело интервал, потому что выше мы вычесляем сколько времени прошло с начала иттерации
      if (diff > INTERVAL) {
        //если прошло больше 10мс то мы попадаем в это условие
        //и сбрасываем это время на текущее
        time = now;
        //и начинает setTimeout вызывать рекурсивно через next
        setTimeout(next, 0);
        //и делаем брейк цикла while, то-есть мы цикл до конца не дошли и начали рекурсивно опять новый цикл
        break;
      }
      //иначе вызываем фцию которая приходит в аргумент со следующим элементом массива. На большинстве иттераций будет вызыватсья просто while и фция и только на некоторых иттераций будет код побадать в блок if
      fn(array[i], i++);
    }
  };

  //точно так же рекурсивно здесь будет вызвать next
  next();
};

let k = 0; //к - это будет то кство раз сколько мы отдали слово next

const timer = setInterval(() => {
  console.log('next ', k++);
}, 10);

const begin = process.hrtime.bigint();

//здесь у нас точно так же фция each, контрак тот же самый(синтаксис не изменился). Во внутрь each вторым аргументом приходит иттерируемая фция
each(numbers, (item, i) => {
  console.log(i);
  if (i === 999) {
    clearInterval(timer);
    const diff = (process.hrtime.bigint() - begin) / 1000000n;
    console.log('Time(ms):', diff.toString());
    console.dir({ k });
  }
});
