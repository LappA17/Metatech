'use strict';

// Сама композиция - она не асинхронная, а вот функции которые мы в compose будем передавать - они уже асинхронные
// асинхронные функции могут иметь разные контракты: к примеру контракт с коллбеком(callback last, error first)  или контракт с Промисами, или функция объявленная через ключевое слово async которая тоже возвращает Промисы

// эти функции из примера ниже запускаются к одному аргументу сначала одна, потом вторая, причем в функциональном программирование принято что бы это с права на лево было, но в js народ привык с лева на право, по-этому в этом примере мы делаем кривовато. То-есть сначала будет применяться фция f1, а потом f2

const compose = (f1, f2) => (x) => f2(f1(x));

// Usage

const inc = (x) => x + 1;
const twice = (x) => x * 2;

const f = compose(inc, twice);

console.log({ res: f(7) });

// { res: 16 }  то-есть сначала 7 добавится 1 и потом 8 умножится на 2
