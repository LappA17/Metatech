'use strict';

const { EventEmitter } = require('node:events');

const emitter = new EventEmitter();

// мы повесили фцию на событие new city

emitter.on('new city', (city) => {
  console.log('Emitted city:', city);
});

// на data вешаем другую фцию

emitter.on('data', (array) => {
  console.log(array.reduce((a, b) => a + b));
});

// дальше эмитим события, после каждого емита вызывается лямбда переданная в событие new city и data, а вторым аргументом передаем аргумент в лямбду

emitter.emit('new city', 'Delhi');
emitter.emit('new city', 'Berlin');
emitter.emit('new city', 'Tokyo');
emitter.emit('data', [5, 10, 7, -3]);

// Евент емиттер может быть передан в другую часть программы(из одного компонента в другой) и сказать емиттеру что когда к тебе прийдут те или инные данные(произойдет какое-то событие), то в этот эмиттор нам эмитни и он будет не метод наш вызывать а события присылать нам в этот евент емиттер, это еще называется шина событий !! У 10 компонентов к примеру может быть одна шина событий, а все остальные могут подписываться или не подписыватсья на неё !!
