'use strict';

// 4 разные способа определить фции

function inc(a) {
  return a + 1;
}

// Компилятор первые запуски не будет знать какие аргумнеты в эту фцию будут приходить(мы же можем и числа и стркои плюсовать) и если мы вызовим эту фцию пару раз с числом то он уже будет знать какой тип приходит и он затипизирует эту фцию под числа
// Важно понимать что хоть и js такой весь обобщенный(то-есть нет явных типов как в с++ или тс), но здесь система типов есть и она хорошо работает. Просто нужно стараться писать код так что бы фции предпологали что ей прийдут аргументы одного и того же типа и всегда возвращали один и тот же тип. Нельзя писать код так что бы фция 5 раз вощвращала число и потом на 6 вернула строку, тогда компилирующий комплиятор не сможет оптимизировать фции и все будет работать медленно !!!
const sum = function (a, b) {
  return a + b;
};

// В идеале писать фции не больше 30 строчек кода, дальше уже делать декомпозицию !!

const max = (a, b) => (a > b ? a : b);

const avg = (a, b) => {
  const s = sum(a, b);
  return s / 2;
};

console.log('inc(5) = ' + inc(5));
console.log('sum(1, 3) = ' + sum(1, 3));
console.log('max(8, 6) = ' + max(8, 6));
console.log('avg(8, 6) = ' + avg(8, 6));
