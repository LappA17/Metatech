'use strict';

const { log: ln } = Math;
const log = (base, n) => ln(n) / ln(base);

// Usage

// Мы вызываем у функции метод bind и мы туда опять передаём константу: либо 10, либо число Е - это еще один способ как из фции const log можно породить более конкретные функции.
// В данном случае bind отправить 10 или Е в первый аргумент фции log на место base, таким образом фция частично применится и у фции log вместо двух аргументов останется один и потом мы уже вызовим lg и ln передав 5ку которая пойдет на место n
// То-есть фция bind помогает нам закрепить с левой стороны некоторое количество аргументов и получить фцию с оставшиемся аргументами !
// Первый аргумент в bind необходим что бы привязывать фцию к Объектному контексту, но мы объектные контексты не используем(мы не делаем фцию log методом какого-то класса) ! Тимболее у нас фция log - это лямбда, а лямбда вообще не умеет привязываться к каким-то объектам через bind, только фцция объявленная через function умеет так делать

{
  const lg = log.bind(null, 10);
  const ln = log.bind(null, Math.E);

  console.log('lg(5) = ' + lg(5));
  console.log('ln(5) = ' + ln(5));
}

// То-есть мы можем это делать при помощи фции конструктора как в первом примере, при помощи лямбд как во-втором и при помощи bind в третем
