'use strict';

// можем своства задавать через точку

const person1 = {};
person1.name = 'Marcus';
person1.city = 'Roma';
person1.born = 121;

const person2 = new Object(); // можем создавать пустой объект через new Object
person2.name = 'Marcus';
person2.city = 'Roma';
person2.born = 121;

// аналогично двум объектам выше

const person3 = {
  name: 'Marcus',
  city: 'Roma',
  born: 121,
};

console.dir({ person1, person2, person3 });

// Все эти три способа создания Объекта одинаковые для нас, но под капотом работают чуть по-другому. Если у нас будет много объектом с однинаковой структурой(те с одинаковыми типами полей), то все эти объекты с одинаковой формой будут Оптимизирующим Компилятором приводится к скрытому классу !
// Наш Компилятор делает такой класс что бы каждый раз не хранить эти именна: name, city, born, те можно будет хранить только значение а именна будут хрнаится только один раз в классе и из-за того что одинаковая структура, то с такого-то байта будет начинатся name, с такого-то city и тд, таким образом можно это оптимизировать что бы не было дубляции ключа и иногда даже значения
